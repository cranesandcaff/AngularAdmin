{
  "name": "bin-wrapper",
  "version": "0.2.3",
  "description": "Binary wrapper that makes your programs seamlessly available as local dependencies",
  "keywords": [
    "bin",
    "build",
    "make",
    "wrapper"
  ],
  "homepage": "https://github.com/kevva/bin-wrapper",
  "bugs": {
    "url": "https://github.com/kevva/bin-wrapper/issues"
  },
  "author": {
    "name": "Kevin Martensson",
    "email": "kevinmartensson@gmail.com",
    "url": "http://kevinmartensson.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/kevva/bin-wrapper.git"
  },
  "scripts": {
    "test": "mocha --reporter list --timeout 0"
  },
  "main": "index.js",
  "files": [
    "index.js"
  ],
  "dependencies": {
    "bin-check": "~0.1.0",
    "download": "~0.1.2",
    "executable": "~0.1.0",
    "find-file": "~0.1.2",
    "mout": "~0.9.0",
    "progress": "~1.1.0",
    "rimraf": "~2.2.6",
    "tempfile": "~0.1.2"
  },
  "devDependencies": {
    "mocha": "~1.17.0"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "readme": "# bin-wrapper [![Build Status](https://secure.travis-ci.org/kevva/bin-wrapper.png?branch=master)](http://travis-ci.org/kevva/bin-wrapper)\n\nBinary wrapper for Node.js that makes your programs seamlessly available as local dependencies\n\n## Getting started\n\nInstall with [npm](https://npmjs.org/package/bin-wrapper): `npm install bin-wrapper`\n\n## Examples\n\n```js\nvar BinWrapper = require('bin-wrapper');\nvar bin = new BinWrapper({ bin: 'gifsicle', dest: 'vendor' });\n\nbin\n    .addUrl('https://raw.github.com/yeoman/node-gifsicle/0.1.4/vendor/osx/gifsicle', 'darwin')\n    .addUrl('https://raw.github.com/yeoman/node-gifsicle/0.1.4/vendor/linux/x64/gifsicle', 'linux', 'x64')\n    .addFile('https://raw.github.com/yeoman/node-jpegtran-bin/master/vendor/win/x64/libjpeg-62.dll', 'windows', 'x64')\n    .addSource('http://www.lcdf.org/gifsicle/gifsicle-1.71.tar.gz')\n    .check()\n    .on('error', function (err) {\n        console.log(err);\n    });\n    .on('fail', function () {\n        this.build('./configure && make && make install')\n    })\n    .on('success', function () {\n        console.log('gifsicle is working');\n    })\n    .on('finish', function () {\n        console.log('gifsicle rebuilt successfully!')\n    })\n```\n\nGet the path to your binary with `bin.path`.\n\n```js\nconsole.log(bin.path); // => path/to/vendor/gifsicle\n```\n\n## API\n\n### new BinWrapper(opts)\n\nCreates a new `BinWrapper`. Available options are `bin` which is the name of the\nbinary and `dest` which is where to download/build the binary to.\n\n### .check(cmd)\n\nCheck if a binary is present and working. If it isn't, download and test it by\nrunning the binary with `cmd` and see if it exits correctly.\n\nEmits `success` if the binary is working and `fail` if the binary failed to exit with\nstatus code `0`.\n\n### .build(cmd)\n\nDownload the source archive defined in the `src` property and build it using the\nbuild script defined in the `cmd` argument.\n\nEmits `finish` when build is finished successfully.\n\n### .addPath(src)\n\nAdd a path where to check for the binary. By default `dest` is added to paths.\n\n### .addUrl(url, platform, arch)\n\nAdd a URL to download the binary from. Use `platform` and `arch` to target a\nspecific system.\n\n### .addFile(url, platform, arch)\n\nAdd a file to download alongside with the binary. Use `platform` and `arch` to\ntarget a specific system.\n\n### .addSource(url)\n\nAdd a URL where to download the source code from.\n\n## Options\n\n### bin\n\nType: `String`  \nDefault: `undefined`\n\nSet the name of the binary.\n\n### dest\n\nType: `String`  \nDefault: `process.cwd()`\n\nDestination to download/build binary.\n\n## License\n\n[MIT License](http://en.wikipedia.org/wiki/MIT_License) (c) [Kevin MÃ¥rtensson](http://kevinmartensson.com)\n",
  "readmeFilename": "README.md",
  "_id": "bin-wrapper@0.2.3",
  "dist": {
    "shasum": "a2023d4652b5321cb1183a8384e22c46947bf1c5"
  },
  "_from": "bin-wrapper@~0.2.0",
  "_resolved": "https://registry.npmjs.org/bin-wrapper/-/bin-wrapper-0.2.3.tgz"
}
